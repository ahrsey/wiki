= cdk =

Possibly helpful CDK related guides
- https://github.com/kevinslin/open-cdk
- https://github.com/kolomied/awesome-cdk
- https://github.com/cloudcomponents/cdk-constructs/tree/master/examples
- https://github.com/blndspt/aws-full-stack-template
- https://github.com/amazon-archives/aws-full-stack-template
- https://github.com/aws-samples/aws-bookstore-demo-app
- https://bobbyhadz.com/blog/how-does-aws-cdk-work
- https://bobbyhadz.com/blog/cdk-constructs-tutorial
- https://bobbyhadz.com/blog/aws-cdk-identifiers
- https://bobbyhadz.com/blog/how-to-use-context-aws-cdk
- https://bobbyhadz.com/blog/aws-cdk-parameters-example
- https://bobbyhadz.com/blog/aws-cdk-vpc-examplehttps://bobbyhadz.com/blog/aws-cdk-vpc-example
- https://bobbyhadz.com/blog/aws-cdk-security-group-example

= sns emails =

- https://docs.aws.amazon.com/sns/latest/dg/sns-email-notifications.html

= scheduled lambdas =
- https://edwinradtke.com/eventtargets
- https://docs.aws.amazon.com/lambda/latest/dg/tutorial-scheduled-events-schedule-expressions.html

= sample cdk apps =
- https://docs.aws.amazon.com/code-samples/latest/catalog/code-catalog-typescript-example_code-cdk.html

= step functions =
- https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html

== dynamic parallelisastion in step functions, basically step functions inside ==
step functions
- https://aws.amazon.com/blogs/aws/new-step-functions-support-for-dynamic-parallelism/
- https://medium.com/nerd-for-tech/dynamic-parallelism-in-aws-step-functions-530f434dd933
- https://aws.amazon.com/about-aws/whats-new/2019/08/aws-step-function-adds-support-for-nested-workflows/
- https://docs.aws.amazon.com/step-functions/latest/dg/amazon-states-language-parallel-state.html
- https://www.youtube.com/watch?v=we1ofz9BJcg

mocking step fn for unit tests
-https://medium.com/codex/creating-jest-unit-tests-for-aws-step-functions-4e4d619789b3

other unit testing step functions
- https://dev.to/aws-builders/testing-aws-step-functions-flows-2kpn
- https://github.com/mickem/aws-stepfunction-test

running step functions locally
- https://www.npmjs.com/package/stepfunctions-local
- https://github.com/localstack/localstack
- https://aws.amazon.com/about-aws/whats-new/2019/02/develop-and-test-aws-step-functions-workflows-locally/

e2e tests for step functions
- https://notes.serverlessfirst.com/public/Testing+Step+Functions#:~:text=E2E%20test%20cases%20typically%20use,its%20output%20at%20each%20stage.
- https://medium.com/theburningmonk-com/testing-strategies-for-step-functions-19cd087eae19
- https://aws.amazon.com/blogs/devops/testing-and-creating-ci-cd-pipelines-for-aws-step-functions-using-aws-codepipeline-and-aws-codebuild/
- https://aws.amazon.com/blogs/compute/mocking-service-integrations-with-aws-step-functions-local/

Testing Step Functions State Machines Locally
- https://docs.aws.amazon.com/step-functions/latest/dg/sfn-local.html
- https://docs.aws.amazon.com/step-functions/latest/dg/sfn-local-config-options.html

= State machines in the Wild! Talk =
https://www.youtube.com/watch?v=sMaqd5J69Ns&t=1373s

= cognito =
- https://medium.com/@sumindaniro/user-authentication-and-authorization-with-aws-cognito-d204492dd1d0#:~:text=To%20allow%20AWS%20resource%20access,This%20is%20called%20federated%20authentication.
- https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_cognito-readme.html
- https://bobbyhadz.com/blog/aws-cdk-cognito-user-pool-example
- https://bobbyhadz.com/blog/aws-cdk-cognito-identity-pool-example
- https://bobbyhadz.com/blog/ses-cognito-user-pool-aws-cdk
- https://medium.com/@sumindaniro/user-authentication-and-authorization-with-aws-cognito-d204492dd1d0
- https://github.com/aws-samples/aws-cdk-examples/blob/master/typescript/cognito-api-lambda/index.ts
- 
== cognito apigatew constructs ==
- https://constructs.dev/packages/@aws-solutions-constructs/aws-cognito-apigateway-lambda/v/2.11.0?lang=typescript

== s3 file encrypted host files ==
- https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html

== serverless s3 streaming example ==
https://github.com/drmikecrowe/serverless-s3-streaming-example/blob/master/src/lib/FileHandler.ts

Understanding Container Reuse in AWS Lambda
- https://aws.amazon.com/blogs/compute/container-reuse-in-lambda/

= Blue green deployments on AWS =
- https://aws-quickstart.s3.amazonaws.com/quickstart-codepipeline-bluegreen-deployment/doc/blue-green-deployments-to-aws-elastic-beanstalk-on-the-aws-cloud.pdf

Awesome aws list
https://github.com/anaibol/awesome-serverless 
https://project-awesome.org/donnemartin/awesome-aws#api-gateway

= dazn-lambda-powertools = 
is a collection of middlewares, AWS clients and helper
libraries that make working with lambda easier.
https://github.com/getndazn/dazn-lambda-powertools

= AWS Lambda Powertools =
for TypeScript provides a suite of utilities for AWS
Lambda functions running on the Node.js runtime, to ease the adoption of best
practices such as tracing, structured logging, custom metrics, and more.
https://awslabs.github.io/aws-lambda-powertools-typescript/latest/


= sam local generate-event =
https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-local-generate-event.html

The Open Guide to Amazon Web Services
https://github.com/open-guides/og-aws

Serverless Messaging: Latency Compared
https://bitesizedserverless.com/bite/serverless-messaging-latency-compared/?utm_source=linkedin&utm_medium=social

Lambda powertools
https://github.com/alexcasalboni/aws-lambda-power-tuning 

AWS certificate exams
https://tutorialsdojo.com/courses/aws-certified-solutions-architect-associate-practice-exams/

How to log in to multiple AWS accounts AWS.
https://towardsaws.com/how-to-log-in-to-multiple-aws-accounts-the-easy-way-9cfd6ef0d628
https://docs.commonfate.io/granted/getting-started/
https://github.com/common-fate/granted

AWS CLI cheatsheet
https://www.bluematador.com/learn/aws-cli-cheatsheet

AWS Practice exams
https://digitalcloud.training/practice-exams/
https://geekflare.com/aws-practice-test/
https://portal.tutorialsdojo.com/shop/
https://portal.tutorialsdojo.com/courses/aws-certified-developer-associate-practice-exams/

AWS certifcates practice
https://medium.com/javarevisited/top-5-online-courses-to-become-aws-certified-developer-associate-in-2020-best-of-lot-9b22baf84ca8
https://medium.com/javarevisited/6-best-aws-developer-associate-dva-c001-certification-practice-test-mock-exams-and-dumps-9e24573f509a
https://www.udemy.com/course/aws-certified-solutions-architect-associate-saa-c03/

Serverless Applications Lens AWS Well-Architected Framework
https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/welcome.html
https://aws.amazon.com/architecture/well-architected/?wa-lens-whitepapers.sort-by=item.additionalFields.sortDate&wa-lens-whitepapers.sort-order=desc&wa-guidance-whitepapers.sort-by=item.additionalFields.sortDate&wa-guidance-whitepapers.sort-order=desc

Error handling in step functions
https://aws.amazon.com/blogs/developer/handling-errors-retries-and-adding-alerting-to-step-function-state-machine-executions/

AWS related commands for removing step functions
https://stackoverflow.com/questions/65602569/how-to-stop-lambda-step-functions-execution-as-bulk-stop-multiple-executions-at
