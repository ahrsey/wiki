= todo =
- update wiki to work on remotely
- create new vimrc

= where ideas go to die =

[[Programming]]
[[aws]]
[[apps-to-build]]
[[game-ideas]]
[[learning]]
[[cool stuff]]
[[dotfiles]]
[[books]]
[[keebs]]
[[wallpapers]]
[[electronics]]
[[game]]
[[blog]]
[[music]]

Studying around eventbridge structure
Read event driven book from Paul

get my wiki working
https://inpyjama.com/arena-allocator-in-c/

git
https://ohshitgit.com/

check out compiling c with zig
https://zig.news/kristoff/compile-a-c-c-project-with-zig-368j

https://thp.itch.io/djg-demo-disc-2023

https://www.youtube.com/watch?v=A8yArQciBAw

update third track to be something about my site, blog etc start with creating
a pixel art character
https://www.amazon.co.uk/Stainless-Keyboard-Removal-Removing-Mechanical/dp/B09838V6Q9/ref=sr_1_6?crid=2UQ7CWDO8YTB8&dib=eyJ2IjoiMSJ9.uT6EaLhrkHbOHT19T4503tpr3W_AU0x2CLCb3iYzdgTSVGunbh53ovsgmNMH7mFDPqTSBXzP7ZSQQ4GRBMhMvEaa1bZcjNTAivP_s_YjeEmEb6PwOhXw7f5p2uFR53eZarR4k2oLCxPmDZfGDUBMNflPIvPNXNPtfFPllK7K2Y6edy4AnVrw30KINBf9z9ZYI5Wj3TokDAX5zeE2SP7tXSfrbBLjr-Pp1azkI-e7UpCQfYmcQLj3Ek5Cj55hFFjFT47gk1ZxOKqgXnLNe8w-lxJZwYrXIavkU2wV4YPy6ZE.pSBiS6jloy-Ek7gML5FljLHnneqaGCaV2g-bBt0f4Sc&dib_tag=se&keywords=keycap+puller&qid=1713922480&sprefix=keycap+puller%2Caps%2C94&sr=8-6

https://antonz.org/stupid
https://www.youtube.com/watch?v=mDFBTdToRmw

https://austinmorlan.com/posts/entity_component_system/
https://www.david-colson.com/2020/02/09/making-a-simple-ecs.html

https://www.youtube.com/@tokyospliff
https://www.youtube.com/@tk_dev988/videos
https://www.youtube.com/watch?v=Qvlb-Yo6Rqo
https://www.youtube.com/@ALifeEngineered
https://www.youtube.com/watch?v=EYt6uDr-PHQ
https://www.youtube.com/watch?v=WDIkqP4JbkE

present for the lady
https://www.misteliquid.co.uk/products/innokn-ez-tube-zenith-minimal-pod-kit
https://www.myuwell.com/products/pod-system/caliburn-g3.html

try to build this
https://www.youtube.com/shorts/TZWbx34rj-c

cron
https://crontab.guru/

https://iq.opengenus.org/
We are a Scientific Community focused on Computing Research & Publishing.

https://www.youtube.com/@GolangCafe
https://www.youtube.com/watch?v=tCAl8fdqDnM
https://github.com/challenger-deep-theme/themes

from nand to tetris
https://www.nand2tetris.org/course

Find duplicate lines in file
:%!awk 'a[$0]++'

cacheing
https://blog.bytebytego.com/p/a-crash-course-in-caching-part-1

rest api auth techniques
https://mojoauth.com/blog/rest-api-authentication/

https://hsnice16.medium.com/send-large-files-from-frontend-to-the-backend-2f5f2414cc7c

Server programming challenges.
https://protohackers.com/

Setup mutt
http://www.mutt.org/

turn this into a function 
this gets a diff list of files from main/master and opens them
$ vim $(git diff --name-only CREO-3922 $(git merge-base CREO-3922 main))

look into signing commits
https://docs.github.com/en/authentication/managing-commit-signature-verification/signing-commits

building your own redis
https://build-your-own.org/redis/

vim for c
https://www.linuxjournal.com/magazine/vim-c-programmers

electrodb
https://github.com/tywalch/electrodb

lldb to gdb map
https://lldb.llvm.org/use/map.html

libc - bootstrapping libc with newlib from 2019
https://interrupt.memfault.com/blog/boostrapping-libc-with-newlib

checkout stagemanager for better workspace management without animation

htmx
https://htmx.org/

replicache
https://replicache.dev/

maybe worth checking this out
https://github.com/nvim-treesitter/nvim-treesitter-context

learning the text-objects 
https://vi.stackexchange.com/questions/11101/does-dap-delete-everything

update install script with gnu-sed

= things to investigate =
script tags nonce
cache control

to check out
https://www.hetzner.com/

Writing a Simple Garbage Collector in C
https://maplant.com/gc.html

https://docs.codeberg.org/improving-codeberg/#contribute-to-codeberg

Check out way of the crab for togglebit
https://wayofthecrab.com/

Rust borrow checker deep dive
https://www.infoq.com/presentations/rust-borrow-checker/
https://blog.logrocket.com/introducing-the-rust-borrow-checker/


Idea, blog with algorithms and data types

compilers, interpreter, assembler
- https://www.bbc.co.uk/bitesize/guides/zmthsrd/revision/1#:~:text=An%20interpreter%20translates%20source%20code,The%20process%20is%20called%20interpretation%20.
- https://medium.com/swlh/entry-level-compiler-ba7e91cffbb2
- https://medium.com/swlh/entry-level-compiler-ba7e91cffbb2

Vim command
prints the output of command directly into current buffer, super interesting

jq cookbook, holy shit
https://github.com/stedolan/jq/wiki/Cookbook#filter-objects-based-on-the-contents-of-a-key

planet scale
https://planetscale.com/

open source firebase alternative
https://supabase.com/

https://www.ibm.com/topics/etl#:~:text=ETL%20is%20a%20process%20that,or%20other%20unified%20data%20repository

background image in kitty  
https://sw.kovidgoyal.net/kitty/conf/#opt-kitty.background_image

open source pay scheme type of things
https://opencollective.com/

oha
https://github.com/hatoo/oha

quickfix
https://vimways.org/2018/colder-quickfix-lists/
https://vimhelp.org/quickfix.txt.html

jest-simple-reporter
https://github.com/richchurcher/jest-simple-reporter

maybe should investigate this too
https://github.com/neomake/neomake
https://phelipetls.github.io/posts/async-make-in-nvim-with-lua/

quickfix related things
https://github.com/ten3roberts/qf.nvim/blob/main/lua/qf.lua

to checkout
https://github.com/charmbracelet/charm

look into showing todos and notifications when opening a new terminal when I
work on my notification app

turn on spell checking for markdown and other writing files

searching buffers
https://stackoverflow.com/questions/843602/vim-how-can-i-search-buffers

http://www.robertgamble.net/2012/01/c11-generic-selections.html

https://en.wikipedia.org/wiki/Boolean_algebra

idiomorph
https://github.com/bigskysoftware/idiomorph

test framework
https://coursework.vschool.io/how-to-make-your-own-testing-framework/

unit testing in c
https://gist.github.com/ngocviet-sublime-gist/5046448
https://interrupt.memfault.com/blog/unit-testing-basics

```c
#include <stdio.h>

#define ASSERT_TRUE(condition) \
    do { \
        if (!(condition)) { \
            printf("Assertion failed: %s, file %s, line %d\n", #condition, __FILE__, __LINE__); \
        } \
    } while (0)

#define ASSERT_FALSE(condition) ASSERT_TRUE(!(condition))

#define ASSERT_EQUAL(expected, actual) \
    do { \
        if ((expected) != (actual)) { \
            printf("Assertion failed: %s != %s, file %s, line %d\n", #expected, #actual, __FILE__, __LINE__); \
        } \
    } while (0)

#define ASSERT_NOT_EQUAL(not_expected, actual) \
    do { \
        if ((not_expected) == (actual)) { \
            printf("Assertion failed: %s == %s, file %s, line %d\n", #not_expected, #actual, __FILE__, __LINE__); \
        } \
    } while (0)

#define RUN_TEST(test_function) \
    do { \
        printf("Running test: %s\n", #test_function); \
        test_function(); \
        printf("Test complete: %s\n", #test_function); \
    } while (0)

// Example test function
void test_addition() {
    ASSERT_EQUAL(5, 2 + 3);
}

int main() {
    RUN_TEST(test_addition);
    return 0;
}
```

other macros
https://www.cs.yale.edu/homes/aspnes/pinewiki/C(2f)Macros.html

81795093
RJ4GQJ6D29PDPK52

https://learnopengl.com/Getting-started/Shaders#:~:text=Getting%2Dstarted%2FShaders,programs%20transforming%20inputs%20to%20outputs.

https://github.com/fffaraz/awesome-cpp#talks

checkout this game
https://www.spiderwebsoftware.com/exile/winexile.html

Tower of Hanoi
https://en.wikipedia.org/wiki/Tower_of_Hanoi

https://www.cbyexample.com/#integer-promotion


readmes
https://towardsdev.com/when-and-where-to-use-pointers-in-go-7e89643a2c9

go markdown
https://blog.kowalczyk.info/article/cxn3/advanced-markdown-processing-in-go.html
https://github.com/avelino/awesome-go
https://betterstack.com/community/guides/logging/logging-in-go/
https://golang50shad.es/
https://snipcart.com/blog/golang-ecommerce-ponzu-cms-demo?utm_term=golang-ecommerce-ponzu-cms-demo
https://github.com/shubhamzanwar/design-patterns

check this out 
https://stacked-git.github.io/

podcasts to checkout
https://www.bsdnow.tv/
https://www.jupiterbroadcasting.com/
https://xmpp.org/

paper on naming
https://aisel.aisnet.org/cgi/viewcontent.cgi?article=1046&context=ecis2003

container numbers
https://www.container-xchange.com/blog/container-number/

Netflix and FreeBSD Using Open Source to Deliver Streaming Video
https://www.youtube.com/watch?v=vcyQBup-Gto

Setup permanant history

lets look into documenting issues I encounter at work, might be useful to
create some resolution file

https://the-algorithms.com/category/datastructures

templates
overloading for vector math
